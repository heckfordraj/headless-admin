type Revision {
  currentId: String;
  publishedId: String | Null;
}

type Page {
  id: String;
  name: String;
  dataId: String;
  revisions: Revision;
  lastModified: Number;
  users: Object | Null;
  validate() { this.id == key() }
}

type Block {
  id: String;
  type: String;
  data: Object | Null;
  order: Number;
  validate() { this.id == key() }
}

type Content {
  clientID: Number;
  steps: Object;
  version: Number;
}

path /users {
  read() { true }
  write() { true }
}

path /pages {
  read() { true }

  /{page} is Page {
    create() { prior(this) == null || prior(this.dataId) == this.dataId }
    update() { prior(this) == null || prior(this.dataId) == this.dataId }
    delete() { true }
  }
}

path /data {
  read() { true }
  write() { true }

  /{pageId} {
    /{revisionId} {

      /{blockId} is Block {
        index() { 'order' }
      }
    }
  }
}
