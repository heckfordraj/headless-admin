type Revision {
  currentId: String;
  publishedId: String | Null;
}

type PageStatus {
  published: Boolean | Null;
  draft: Boolean | Null;
  archived: Boolean | Null;
}

type Page {
  id: String;
  name: String;
  dataId: String;
  revisions: Revision;
  status: PageStatus;
  lastModified: Number;
  validate() { this.id == key() }
}

type Block {
  id: String;
  type: String;
  order: Number;
  validate() { this.id == key() }
}

type User {
  id: String;
  colour: String;
  current: Object | Null;
  validate() { this.id == key() }
}

type TextData {
  id: Number;
  user: String;
  delta: Object | Null;
}

type ImageData {
  id: String;
  alt: String;
  url: String;
  validate() { this.id == key() }
}

path /users {
  read() { true }
  write() { true }

  /{userId} is User {
  }
}

path /content {
  read() { true }
  write() { true }

  /{blockId}{
    /{contentId} is TextData | ImageData{
    }
  }
}

path /pages {
  read() { true }

  /{page} is Page {
    create() { prior(this) == null || prior(this.dataId) == this.dataId }
    update() { prior(this) == null || prior(this.dataId) == this.dataId }
    delete() { true }
    index() { 'lastModified' }
  }
}

path /data {
  read() { true }
  write() { true }

  /{pageId} {
    /{revisionId} {

      /{blockId} is Block {
        index() { 'order' }
      }
    }
  }
}
